{"version":3,"sources":["fixtures.js","utils.js","index.js"],"names":["currencyByDate","EUR","r030","txt","rate","cc","exchangedate","USD","PLN","formatDateForRequest","date","mm","getMonth","dd","getDate","getFullYear","join","module","hot","accept","window","dataStore","currentCurrency","currentDate","Date","renderApp","setCurrency","value","document","getElementById","innerHTML","app","exchangeRateToday","chooseCurrency","chooseDate","ratesForToday","yesterday","setDate","ratesForYesterday","exchangeRateYesterday","displayExchangeRateToday","toFixed","currency","exchangeRate","rateDifference","rateDifferenceStr","toLocaleDateString","setCurrencyCB","content","map","toISOString","split"],"mappings":"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","file":"kottans-own-framework.8433e509.js","sourceRoot":"..","sourcesContent":["// https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?valcode=EUR&date=20200302&json\nexport const currencyByDate = {\n  20210421: {\n    EUR: [\n      {\n        r030: 978,\n        txt: 'Євро',\n        rate: 26.9789,\n        cc: 'EUR',\n        exchangedate: '02.03.2020',\n      },\n    ],\n    USD: [\n      {\n        r030: 840,\n        txt: 'Долар США',\n        rate: 24.5976,\n        cc: 'USD',\n        exchangedate: '02.03.2020',\n      },\n    ],\n    PLN: [\n      {\n        r030: 985,\n        txt: 'Злотий',\n        rate: 6.237,\n        cc: 'PLN',\n        exchangedate: '02.03.2020',\n      },\n    ],\n  },\n  20210420: {\n    EUR: [\n      {\n        r030: 978,\n        txt: 'Євро',\n        rate: 25.3789,\n        cc: 'EUR',\n        exchangedate: '02.03.2020',\n      },\n    ],\n    USD: [\n      {\n        r030: 840,\n        txt: 'Долар США',\n        rate: 23.1414,\n        cc: 'USD',\n        exchangedate: '02.03.2020',\n      },\n    ],\n    PLN: [\n      {\n        r030: 985,\n        txt: 'Злотий',\n        rate: 7.444,\n        cc: 'PLN',\n        exchangedate: '02.03.2020',\n      },\n    ],\n  },\n};\n","export const EUR = 'EUR';\nexport const USD = 'USD';\nexport const PLN = 'PLN';\n\nexport function formatDateForRequest(date) {\n  // 02-03-2020 will be like `20200302`\n  // from https://stackoverflow.com/a/3067896/10849913\n  const mm = date.getMonth() + 1; // getMonth() is zero-based\n  const dd = date.getDate();\n\n  return [date.getFullYear(), (mm > 9 ? '' : '0') + mm, (dd > 9 ? '' : '0') + dd].join('');\n}\n","import { currencyByDate } from './fixtures';\n\nimport { EUR, formatDateForRequest, PLN, USD } from './utils';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.dataStore = {\n  currentCurrency: USD,\n  currentDate: new Date('April 21, 21'),\n};\n\nwindow.renderApp = renderApp;\n\nconst setCurrency = function (value) {\n  window.dataStore.currentCurrency = value;\n  window.renderApp();\n};\n\nrenderApp();\n\nfunction renderApp() {\n  document.getElementById('app-root').innerHTML = `\n        ${app()}\n    `;\n}\n\nfunction app() {\n  return `<div class=\"container py-5\" class=\"p-5 mb-4 bg-light rounded-3\">\n  ${exchangeRateToday()}\n  <div class=\"row align-items-start\">\n      <div class=\"col-6\">\n      ${chooseCurrency(window.dataStore.currentCurrency, setCurrency)}\n      ${chooseDate()}\n </div>\n</div>`;\n}\n\nfunction exchangeRateToday() {\n  const { currentCurrency, currentDate } = window.dataStore;\n\n  const ratesForToday = currencyByDate[formatDateForRequest(currentDate)];\n  const exchangeRateToday = ratesForToday ? ratesForToday[currentCurrency][0]['rate'] : null;\n\n  const yesterday = new Date(currentDate);\n  yesterday.setDate(yesterday.getDate() - 1);\n\n  const ratesForYesterday = currencyByDate[formatDateForRequest(yesterday)];\n  const exchangeRateYesterday = ratesForYesterday\n    ? ratesForYesterday[currentCurrency][0]['rate']\n    : null;\n\n  const rateDifference =\n    exchangeRateToday && exchangeRateYesterday\n      ? (exchangeRateToday - exchangeRateYesterday).toFixed(2)\n      : null;\n\n  return displayExchangeRateToday(currentCurrency, exchangeRateToday, currentDate, rateDifference);\n}\n\nfunction displayExchangeRateToday(currency, exchangeRate, date, rateDifference) {\n  exchangeRate = exchangeRate || 'Not Available';\n\n  const dateString = date.toLocaleDateString();\n\n  let rateDifferenceStr = '';\n  if (rateDifference) {\n    const differenceStyle = rateDifference > 0 ? 'success' : 'danger';\n    const sign = rateDifference > 0 ? '+' : '';\n    rateDifferenceStr = `<span class=\"text-${differenceStyle} fs-3\">${sign}${rateDifference}</span>`;\n  }\n\n  return `\n  <h1 class=\"display-5 fw-bold\">\n      <span class=\"text-secondary\">${currency}:</span>\n      ${exchangeRate}\n      ${rateDifferenceStr}      \n  </h1>\n    <p class=\"text-secondary\">\n      Rate for ${dateString}\n  </p> \n  `;\n}\n\nfunction chooseCurrency(currentCurrency, setCurrencyCB) {\n  const currencies = [{ value: USD }, { value: EUR }, { value: PLN }];\n  let content = `\n    <label for=\"id_select\">Choose currency:</label>\n    <select id=\"id_select\" class=\"form-select\" \n    autofocus=\"true\" onchange=\"(${setCurrencyCB})(this.value);\">\n  `;\n\n  content += currencies\n    .map(({ value }) => {\n      const selected = currentCurrency === value ? 'selected' : '';\n      return `<option value=\"${value}\" ${selected}>${value}</option>`;\n    })\n    .join('');\n  content += `</select>`;\n  return content;\n}\n\nfunction chooseDate() {\n  const currentDate = window.dataStore.currentDate;\n  // get date in `yyyy-mm-dd` format\n  const dateStr = currentDate.toISOString().split('T')[0];\n\n  return `\n    <div class=\"mt-3\">\n        <label for=\"dateInput\" class=\"form-label\">Choose date:</label>\n        <input type=\"date\"\n               value=\"${dateStr}\"\n               onchange=\"window.dataStore.currentDate = new Date(this.value); \n                window.renderApp();\"\n               class=\"form-control\"\n               id=\"dateInput\">\n    </div>\n`;\n}\n"]}